{"ast":null,"code":"var _jsxFileName = \"/home/crhea/Documents/SFL/Training/Websocket-Chat/frontend/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport socketClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = \"http://127.0.0.1:8080\"; //function sendMessage(){\n//axios.get(\"/api/chats\").then(res => this.setState({chatList: res.data})).catch(e => console.log(e))\n//}\n\nfunction Chat() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  var socket = socketClient(SERVER);\n  useEffect(() => {\n    socket.on(\"receive-message\", data => {\n      console.log(data);\n      setMessages(data);\n    });\n  }, []);\n  socket.on('connection', () => {\n    console.log(`I'm connected with the back-end`);\n  });\n\n  const sendMessage = e => {\n    // Define what to do when we send a message\n    e.preventDefault(); // prevent submission\n\n    const messageInput = document.getElementById('message-input');\n    const roomInput = document.getElementById('room-input');\n    const message = messageInput.value; // get message input\n\n    console.log(message); //const room = roomInput.value | 1;  // Get room name\n\n    socket.emit('send-message', message); // Send message to server\n\n    if (message === \"\") {\n      console.log('No message entered.');\n    } else {\n      messageInput.value = ''; // Clear message value\n\n      let newMessages = [...messages]; // copying the old datas array\n\n      newMessages.push(message); // Add new message        // print out message\n\n      setMessages(newMessages); // Set message state with new message\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-6 w-50 h-50 align-items-center mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message-container\",\n      className: \"col-lg-12 border border-info rounded w-100 h-50\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"message-input\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"message\",\n          id: \"message-input\",\n          placeholder: \"Enter Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"room-input\",\n          children: \"Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"room\",\n          name: \"room-input\",\n          placeholder: \"room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Chat, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/crhea/Documents/SFL/Training/Websocket-Chat/frontend/client/src/components/Chat.js"],"names":["React","useState","useEffect","axios","Button","Form","FormGroup","Input","Label","socketClient","SERVER","Chat","messages","setMessages","socket","on","data","console","log","sendMessage","e","preventDefault","messageInput","document","getElementById","roomInput","message","value","emit","newMessages","push","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\nimport socketClient from \"socket.io-client\";\nconst SERVER = \"http://127.0.0.1:8080\";\n\n\n//function sendMessage(){\n    //axios.get(\"/api/chats\").then(res => this.setState({chatList: res.data})).catch(e => console.log(e))\n//}\n\nfunction Chat(){\n    const [messages, setMessages] = useState([]);\n    var socket = socketClient (SERVER, );\n\n    useEffect(() => {\n        socket.on(\"receive-message\", data => {\n            console.log(data)\n          setMessages(data);\n        });\n      }, []);\n\n    socket.on('connection', () => {\n        console.log(`I'm connected with the back-end`);\n    });\n\n    const sendMessage = (e) => {  // Define what to do when we send a message\n        e.preventDefault();  // prevent submission\n        const messageInput = document.getElementById('message-input');\n        const roomInput = document.getElementById('room-input');\n        const message = messageInput.value;  // get message input\n        console.log(message)\n        //const room = roomInput.value | 1;  // Get room name\n        socket.emit('send-message', message)  // Send message to server\n        if (message === \"\") {\n            console.log('No message entered.')\n        }else{\n            messageInput.value = '';   // Clear message value\n            let newMessages = [...messages]; // copying the old datas array\n            newMessages.push(message);  // Add new message        // print out message\n            setMessages(newMessages)  // Set message state with new message\n        }\n    }\n\n    return(\n            <div className='col-lg-6 w-50 h-50 align-items-center mx-auto'>\n            <div id=\"message-container\" className='col-lg-12 border border-info rounded w-100 h-50'>\n              {messages.map(message => (\n                  <div key={message.id}>\n                    <p>{message}</p>\n                  </div>\n              ))}\n            </div>\n            <Form>\n                  <FormGroup>\n                      <Label for='message-input'>Message</Label>\n                      <Input\n                        type='text' name='message' id=\"message-input\"\n                        placeholder=\"Enter Message\"\n                      />\n                  </FormGroup>\n                <Button color='success' onClick={sendMessage}>\n                    Send\n              </Button>\n                  <FormGroup>\n                      <Label for='room-input'>Room</Label>\n                      <Input\n                        type='text' id=\"room\" name='room-input'\n                         placeholder=\"room\"\n                      />\n                  </FormGroup>\n                <Button color='success'>\n                    Join\n              </Button>\n            </Form>\n            </div>\n        )\n}\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}